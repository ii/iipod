#+title: Deploy
#+PROPERTY: header-args:tmux+ :session ":iipod"
* cluster
For now refer to https://github.com/cloudnative-nz/infra
Your clusters needs a few things that are deployed there
* image
:PROPERTIES:
:header-args:tmux+: :session ":iimage"
:END:
** ssh to root@sharing.io
Be sure to connect with ssh agent forwarding:
#+begin_src tmux
ssh -A ii@sharing.io
#+end_src
** ensure current version
#+begin_src tmux
cd ~/iipod && git pull
#+end_src
** optionally login to docker registry
#+begin_src tmux
docker login ghcr.io -u hh --password-stdin
#+end_src
** build the image
#+begin_src tmux
cd ~/iipod/build
# should pull from ~/iipod/.envrc
# Be sure to include `export DEFAULT_CONTAINER_IMAGE=ghcr.io/ii/iipod:2023.08.01-01 or similar`
docker build -t $DEFAULT_CONTAINER_IMAGE .  && docker push $DEFAULT_CONTAINER_IMAGE
#+end_src
** Be sure and update your DEFAULT_CONTAINER_IMAGE
in .envrc
#+begin_src shell
export DEFAULT_CONTAINER_IMAGE="ghcr.io/ii/iipod:2023.07.31-01"
#+end_src
* .envrc
#+begin_src shell
export CODER_URL="https://space.cloudnative.nz"
export CODER_DOMAIN="cloudnative.nz" #*.DOMAIN for spaces
export LOCAL_IP="123.253.178.101" # local to the cluster for ingress
export PUBLIC_IP="123.253.178.101" # external DNS / reachable by everyone
# Need to create domains, so need PDNS account
export PDNS_API_KEY=NEEDS_CREATE_DOMAIN_ADMIN # Usually pretty short
export PDNS_API_URL="https://pdns.ii.nz" # We may run this per cluster later
export PDNS_ACCOUNT="cloudnativenz" # Actually the PowerDNS Admin account
# RFC2136 TSIG
export DNS_UPDATE_SERVER="123.253.176.253" # DNS Server to connect to
export DNS_UPDATE_KEYNAME="cloudnative.nz." # TSIG Key Name
export DNS_UPDATE_KEYALGORITHM="hmac-sha256" # TSIG Key Algorithm
export DNS_UPDATE_KEYSECRET=BASE64_TSIG_RFC2136
# The rest of these are for the defaults for the template default vars and workspace rich-params
export DEFAULT_GIT_URL="https://github.com/cloudnative-nz/infra"
export DEFAULT_ORG_URL="https://raw.githubusercontent.com/cloudnative-nz/infrasnoop/canon/org/demo.org"
export DEFAULT_CONTAINER_IMAGE="ghcr.io/ii/iipod:2023.07.31-01"
# For when we create/push a template, to push a .terraform.lock
export TF_VERSION=1.5.4
# For when we instanciate a template, the name and how long to keep it up
export CODER_TEMPLATE_NAME=iipod
export CODER_WORKSPACE_STOP_AFTER=7d
#+end_src
* terraform
:PROPERTIES:
:header-args:tmux+: :session ":tfswitch"
:END:
** ssh
#+begin_src tmux
ssh -A ii@sharing.io
#+end_src
** tfswitch
*** install
#+begin_src tmux
curl -L https://raw.githubusercontent.com/warrensbox/terraform-switcher/release/install.sh | sudo bash
#+end_src
*** ensure terraform version is 1.5.4

#+begin_src tmux
export TF_VERSION=1.5.4
tfswitch
#+end_src
** check terraform
#+begin_src tmux
terraform version
#+end_src

* coder
:PROPERTIES:
:header-args:tmux+: :session ":coder"
:END:
** optional ssh
#+begin_src tmux
ssh -A ii@sharing.io
#+end_src
** CODER_CONFIG_DIR
#+begin_src tmux
export CODER_CONFIG_DIR=~/.config/coder.sharing.io
#+end_src
** coder login
#+begin_src tmux
coder login https://coder.sharing.io
#+end_src
* template
:PROPERTIES:
:header-args:tmux+: :session ":template"
:END:
** optional ssh
#+begin_src tmux
ssh -A ii@sharing.io
#+end_src
** cd to iipod folder
#+begin_src tmux
cd ~/iipod
#+end_src

#+RESULTS:

** init terraform
coder now supports speeding things up if you `terraform init` so .terraform.lock.hcl is pushed the template and cached.
https://github.com/coder/coder/pull/7604/files

#+begin_example
WARN: No .terraform.lock.hcl file found
  | When provisioning, Coder will be unable to cache providers without a lockfile and must download them from the internet each time.
  | Create one by running  terraform init  in your template directory.
#+end_example

#+begin_src tmux
terraform init
#+end_src

#+RESULTS:

** push/create the template with terraform vars
#+begin_src tmux
export CODER_CONFIG_DIR=~/.config/coder.sharing.io
export CODER_TEMPLATE_NAME=iipod
cd ~/iipod
source .envrc
coder template push \
    --yes \
    --directory . \
    --variable coder_url=$CODER_URL \
    --variable public_ip=$PUBLIC_IP \
    --variable coder_domain=$CODER_DOMAIN \
    --variable openai_api_token=$OPENAI_API_TOKEN \
    --variable pdns_api_url=$PDNS_API_URL \
    --variable pdns_api_key=$PDNS_API_KEY \
    --variable dns_update_account=$DNS_UPDATE_ACCOUNT \
    --variable dns_update_server=$DNS_UPDATE_SERVER \
    --variable dns_update_keyname=$DNS_UPDATE_KEYNAME \
    --variable dns_update_keyalgorithm=$DNS_UPDATE_KEYALGORITHM \
    --variable dns_update_keysecret=$DNS_UPDATE_KEYSECRET \
    --variable default_git_url=$DEFAULT_GIT_URL \
    --variable default_org_url=$DEFAULT_ORG_URL \
    --variable default_container_image=$DEFAULT_CONTAINER_IMAGE \
    $CODER_TEMPLATE_NAME \
    --message "$USER iipod Template at $(date)"
#+end_src

#+RESULTS:

    # \
    #--name "foo-bar-baz-`date +%T`"
* workspace
** cd to iipod folder
#+begin_src tmux
cd ~/iipod
#+end_src
** check your env settings
#+begin_src shell :wrap "src shell"
cd ~/iipod
source .envrc
env | grep "CODER" | grep SSH\\\|WORKSPACE\\\|TEMPLATE | sort
env | grep "DEFAULT_" | sort
#+end_src

#+RESULTS:
#+begin_src shell
CODER_TEMPLATE_NAME=iipod
CODER_WORKSPACE_STOP_AFTER=7d
DEFAULT_CONTAINER_IMAGE=ghcr.io/ii/iipod:2024.10.02-01
DEFAULT_GIT_URL=https://github.com/ii/iipod/
DEFAULT_ORG_URL=https://raw.githubusercontent.com/ii/iipod/org/vcluster.org
#+end_src



** coder create with parameters
#+begin_src tmux
cd ~/iipod
# These three vars are picked up by coder create
# export CODER_CONFIG_DIR=~/.config/space.cloudnative.nz
source .envrc
# export CODER_CONFIG_DIR=~/.config/space.uk.cloudnative.coop
export CODER_TEMPLATE_NAME=iipod
export CODER_WORKSPACE_STOP_AFTER=8h
# SPACENAME is in the form fri0838
export SPACENAME=$(date +%a%H%M | tr '[:upper:]' '[:lower:]')
echo Creating $SPACENAME from template $CODER_TEMPLATE_NAME
time coder create \
    --parameter container-image=$DEFAULT_CONTAINER_IMAGE \
    --parameter git-url=$DEFAULT_GIT_URL \
    --parameter org-url=$DEFAULT_ORG \
    --yes $SPACENAME
#+end_src
** older
#+begin_src tmux
export CODER_RICH_PARAMETER_FILE=$(mktemp)
cat <<-EOF > $CODER_RICH_PARAMETER_FILE
container-image: $DEFAULT_CONTAINER_IMAGE
git-url: $DEFAULT_GIT_URL
org-url: $DEFAULT_ORG_URL
EOF
#+end_src
* aoeu
#+begin_src tmux
echo FOO
#+end_src
a
